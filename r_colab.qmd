# R on Colab

本書では，[R](https://www.r-project.org/)（アール）という統計ソフト
（あるいはプログラミング言語）を使って
LSAについて学びます。
プログラミングというと難しそうと思うかもしれませんが，
ここ数年の急速なコンピュータ技術の進展に伴い，
Rを使うハードルは確実に下がっています。
2025年現在では，自分のパソコンにインストールしなくても
ブラウザさえあれば，RでLSAの分析ができるようになりました。
Rには，無料でさまざまな統計解析ができるという特徴があります。
ぜひこの機会にRを学び，新たな世界に触れてみてください。


## Rとは
最初にRの概要について説明します[^1]。
何度か述べたように，Rは，統計解析向けのプログラミング言語です。
統計処理に必要なコードを簡単に書けること・
高度な統計分析のパッケージが充実していること・
無料で利用できることもあって，
統計を必要とするさまざまな分野で利用されています。
本書が扱うPISAやTIMSSといった大規模学力調査の分析もRで行うことができます。

[^1]: より詳しく知りたい場合は，
  社会調査の観点からRを扱った書籍[@sugino2017]や
  [ウェブサイト](https://ryotamugiyama.github.io/seminar_sociology_r/){target="_blank"}をご覧ください。

本書がRを薦める理由は，Rが使いやすく，かつ無料であるという点にあります。
社会調査に馴染みのある人の中には，
[SPSS](https://www.ibm.com/jp-ja/spss){target="_blank"}（エスピーエスエス）や
[STATA](https://www.stata.com/){target="_blank"}（ステータ，スタータ）
といったソフトウェアを知っている人もいるでしょう。
確かに，これらのソフトウェアを使ってLSAを分析することもできます。
ただ，SPSSやSTATAは無償というわけにはいきません。
そのため，大学や大学院に在籍しているあいだは使えても，
そこを離れてしまうと使えないという事態に陥りがちです。
無料というのは本当に重要で，とくに財政難・物価高の昨今，
たとえ大学教員であっても年に数万円を捻出するのも難しいという人は少なくないと思います。

Rであればパソコンとインターネットさえあれば誰でも使えますし，
分析結果を他者と共有することも容易です。
本書で扱うColabというシステムを使えば，
作成したファイル（.ipynb）を渡せば情報共有は完了です。
Rからhtmlを作成し，成果をインターネットで公開することもできます。
実際に本書は，Rによるレポート作成機能[^2]を使って作成しています。
ついでに，統計に詳しい人の中にはRを使っている人が多いので，
Rが使えると，かれらにアドバイスをもらえたり，
かれらの使っているコードを真似できたりといった利点もあります。
最初の一歩はハードルが高いかもしれませんが，
そこを超えると，さまざまな可能性が広がっているのです。
ぜひこの機会にRに挑戦してみてください。

[^2]: [quarto](https://quarto.org/){target="_blank"}と言います。

## Colabとは
[Colab](https://colab.google/){target="_blank"}（コラボ）とは，
Googleが提供するクラウドベース[^3]の開発環境です。
機械学習やデータサイエンスなどで利用されています。
ブラウザ上で[Python](https://www.python.org/){target="_blank"}（パイソン）というプログラム言語を直接実行でき，
特別な準備が要らないという特徴があります。
Colabは基本的にはPythonを利用するための環境なのですが，簡単な設定でRを利用することができるので，
本書ではColabの利用を前提に，Rについて説明していきます。

[^3]: 「パソコンにソフトをインストールせずに作業できる」くらいの意味です。

RをColabで使うには，いくつかステップを踏む必要があります。
順に解説していきますので，手順に沿って進めてみてください。

### Google アカウントを用意する
ColabはGoogleのサービスなので，利用にはGoogle アカウントが必要です。
というわけで，[Google アカウントを作成](https://www.google.com/intl/ja/account/about/){target="_blank"}して
Googleにログインしてください。
以下の説明は，すでにログインしている前提で行います。

### Colabのサイトにアクセスする
まずは[Colab](https://colab.research.google.com/?hl=ja){target="_blank"}にアクセスしてください。
おそらく，@fig-colab1 のような画面が表示されるはずです。
ここで，左下の「ノートブックを新規作成」（青いところ）をクリックすると，
@fig-colab2 の画面が表示されます。

![Colabにアクセスした画面](image/RonColab/colab1.png){#fig-colab1}


![Colabの初期画面](image/RonColab/colab2.png){#fig-colab2}

これがColabです。
この画面にRのコードや文章を入力しながら，
レポートを作成することができます。

### ランタイムをRに変更する

初期設定ではPythonが前提になっているので，
Rのコードを入力するとエラーが発生します。
これを防ぐには，ひと工夫が必要です。

まず，メニューにある「ランタイム」をクリックします。
すると，@fig-colab3 の画面になるので，
「ランタイムのタイプを変更」をクリックします。

![ランタイムのタイプを変更](image/RonColab/colab3.png){#fig-colab3}


続いて，@fig-colab4 の画面で，
「ランタイムのタイプ」をPython 3からRに変更します。

![ランタイムのタイプ](image/RonColab/colab4.png){#fig-colab4}

これで準備は完了です。
続いて，R on Colabの使い方を簡単に説明します。

## R on Colabの基本操作

### コードを実行する
まずは，簡単なコードを実行してみましょう。
ここでは例として，簡単な足し算をしてみましょう。
@fig-colab5 のように，`3 + 4`と入力してから「▷」のボタンを押してみてください。
最初は少し時間がかかると思いますが，
しばらくすると，@fig-colab6 のような画面が現れるはずです。

![コードの入力](image/RonColab/colab5.png){#fig-colab5}

![実行結果](image/RonColab/colab6.png){#fig-colab6}

### テキストを追加する

Colabの便利なところは，コードだけでなく，
テキストを書けるところです。
テキストを書くには，
@fig-colab7 のように境界付近にカーソルを移動すると出てくる「＋テキスト」をクリックします。
すると，@fig-colab8 のように，
新しいブロック（セルと呼びます）が出現します。

![セルを追加](image/RonColab/colab7.png){#fig-colab7}

![テキスト入力画面](image/RonColab/colab8.png){#fig-colab8}

@fig-colab8 の画面をよく見ると，ブロックが左右に分かれていることに気づくかもしれません。
Colabのテキストは，左側の画面に入力を行います。
すると，@fig-colab9 のように右側にプレビューが現れます。
入力にはいろいろルールがあるのですが，
とりあえず次の二つを覚えておくと良いでしょう。

- \# を最初につけると「見出し」になる
- \- をつけると箇条書きになる

他にもいろいろルールがありますが，とりあえずはこれで十分です。
気になる人は，[Markdown](https://colab.research.google.com/drive/17yeouQ2rJm3ikFF-Xe78t0pqttp3w3I2?usp=sharing){target="_blank"}を調べてみてください。

![テキストの書き方](image/RonColab/colab9.png){#fig-colab9}

### エラーが出た場合
ColabでRを操作していると，エラーが出ることがあります。
普段パソコンを使っていてエラーに遭遇する機会などないですし，
メッセージが英語なので驚くと思いますが，
プログラミングでは英語のエラーメッセージに遭遇するのはよくあることです。
ですから，落ち着いてエラー表示を読みましょう。
「ここが間違っています」という指示が（英語で）書かれていることもしばしばありますので，
その指示に従ってコードを直せば動くようになります。

#### 何も起きない
厳密にはエラーではないのですが，「実行しても何も起きない」と混乱する方がいます。
たとえば`a <- 3; b <- 4`というコードは，[「aに3，bに4を保存する」という意味です[^4]。
aやbに数値を保存しているだけなので，これだけでは
@fig-colab10 のように何も起きません。
結果を表示するには，たとえば @fig-colab11 のように
`a + b`といった指示を出す必要があるのです。
入力しても「何も起きない」という場合は，自分が結果を出力する指示をしているのかどうか
確認してみてください。

[^4]: [オブジェクト](r_basics.qmd#オブジェクト)をご覧ください。

![何も起きない](image/RonColab/colab10.png){#fig-colab10}

![実行結果が表示される](image/RonColab/colab11.png){#fig-colab11}


#### 日本語が文字化けする
初期設定のままRを使うと，図を描画した際に文字化けします。
これを防ぐには，
日本語フォントをインストールするコマンドを入力する必要があります。
以下の例では，IPA fontというフォントをColabにインストールしています。

なお，Colabで日本語フォントを表示する方法はColabの仕様変更に伴って変わることがあります。
以下の設定をしても日本語フォントが表示されない場合は，
仕様が変わってしまったのだなあ・・・と諦めてください
（著者も気づいたらできるだけ修正するようにします）。

```r
# 日本語フォントを導入
system("apt-get -y install fonts-ipafont-gothic")
# 日本語が表示可能
curve(sin(x), -pi, pi, main = "サインカーブ")
```



#### ランタイムがRになっていない
コードをコピペしたはずなのに動かないという場合，
[ランタイムの設定がPythonのままになっていないか](#ランタイムをrに変更する)確認してください。
PythonとRは違う言語なので，RのコードをPythonで動かすと普通はエラーが出ます。
（ごく稀に動くこともありますが）。
ポイントは，@fig-colab12 のような`ipython-input`というメッセージです。
Rを動かしているのですから，pythonなどというメッセージがでるはずがありません。

![Runtime Error](image/RonColab/colab12.png){#fig-colab12}

#### 対応するカッコが抜けている
Rに限らず，プログラムでは`( )`という表現が多用されます。
ここで`(1, 2, 3`のように対応するカッコが欠けている場合，
@fig-colab13 のようなエラーが出ます。この場合，
@fig-colab14 のように対応するカッコを追加すると，エラーは消えます。
なお，`( )`以外に`[ ]`や`{ }`も対応させないとエラーが出ます。

![Error in parse](image/RonColab/colab13.png){#fig-colab13}

![カッコを追加](image/RonColab/colab14.png){#fig-colab14}

#### 定義していないオブジェクト
Rでは，さまざまな情報を「オブジェクト」[^5]と呼ばれるものに保存して利用します。
たとえば @fig-colab15 では，`a`に1を，`b`に2を保存しています
（`<-`は何だ？など気になることもあるでしょうが，とりあえず説明は後回しで）。
ここで唐突に，`d`と入力するとエラーが出ます。
`a`や`b`は定義済みですが，`d`はまだ定義していないからです。
エラーメッセージにも，`object 'd' not found（dが見つからない）`と表示されています。

[^5]: [オブジェクト](r_basics.qmd#オブジェクト)をご覧ください。

![オブジェクトが見つからない](image/RonColab/colab15.png){#fig-colab15}

#### 奥の手（AIに頼る）
ちなみにエラーが生じると，`次のステップ：エラーの説明`という表示が
出ることがあります。
ここをクリックするとAIがコードを分析し問題点を解説してくれます
（ただし2025年1月時点では説明は英語になります）。
すべての指摘が正しいとはかぎりませんが，問題解決のヒントになることもあるので活用してください。


### その他

Colabの基本操作は，これくらいで十分です。
あとは
@fig-colab7 の手順で
新しいコードセルかテキストセルを追加し，
レポートにまとめていきます。

セルの上下を入れ替えたいとか，
セルを削除したいといった場合は，
@fig-colab16 の位置にあるボタンを押すと，
セルを操作することができますので試してください。

![セルの操作](image/RonColab/colab16.png){#fig-colab16}

また，作成したノートブックは，
Google Driveに自動保存されています。
ファイルを探したい場合は，
「マイドライブ」の中の「Colab Notebooks」を探してみてください
（@fig-colab17 ）。

![作成したファイルの位置](image/RonColab/colab17.png){#fig-colab17}

Colabの説明は，これで終わりです。
いろいろ入力してみて，操作に慣れていってください。
